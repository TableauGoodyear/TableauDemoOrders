<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10400.17.1103.1137                               -->
<workbook original-version='10.4' source-build='10.4.1 (10400.17.1103.1137)' source-platform='win' version='10.4' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Sales Data.csv+ (Multiple Connections)' inline='true' name='federated.0jvq6cl0wmxlhb101vrjb14io8e1' version='10.4'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Sales Data' name='textscan.16p8685100illg1aeqmp31h1m7u3'>
            <connection class='textscan' directory='C:/Users/nene004/Documents/GitHub/TableauDemoOrders/Data' filename='Sales Data.csv' password='' server='' />
          </named-connection>
          <named-connection caption='Master data' name='excel-direct.0jmu2e31kfjnft1d01m9i1w9ux8v'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/nene004/Documents/GitHub/TableauDemoOrders/Data/Master data.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation join='left' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Sales Data.csv].[PRODUCT_ID]' />
              <expression op='[Products].[PRODUCT_ID]' />
            </expression>
          </clause>
          <relation join='left' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[Customers].[PROVINCE]' />
                <expression op='[Locations].[PROVINCE]' />
              </expression>
            </clause>
            <relation join='left' type='join'>
              <clause type='join'>
                <expression op='='>
                  <expression op='[Sales Data.csv].[CUSTOMER_ID]' />
                  <expression op='[Customers].[CUSTOMER_ID]' />
                </expression>
              </clause>
              <relation connection='textscan.16p8685100illg1aeqmp31h1m7u3' name='Sales Data.csv' table='[Sales Data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='ROW_ID' ordinal='0' />
                  <column datatype='integer' name='ORDER_ID' ordinal='1' />
                  <column datatype='date' name='ORDER_DATE' ordinal='2' />
                  <column datatype='string' name='ORDER_PRIORITY' ordinal='3' />
                  <column datatype='integer' name='ORDER_QUANTITY' ordinal='4' />
                  <column datatype='real' name='SALES' ordinal='5' />
                  <column datatype='real' name='DISCOUNT' ordinal='6' />
                  <column datatype='string' name='SHIP_MODE' ordinal='7' />
                  <column datatype='real' name='PROFIT' ordinal='8' />
                  <column datatype='real' name='UNIT_PRICE' ordinal='9' />
                  <column datatype='real' name='SHIPPING_COST' ordinal='10' />
                  <column datatype='integer' name='CUSTOMER_ID' ordinal='11' />
                  <column datatype='integer' name='PRODUCT_ID' ordinal='12' />
                  <column datatype='string' name='PRODUCT_CONTAINER' ordinal='13' />
                  <column datatype='real' name='PRODUCT_BASE_MARGIN' ordinal='14' />
                </columns>
              </relation>
              <relation connection='excel-direct.0jmu2e31kfjnft1d01m9i1w9ux8v' name='Customers' table='[Customers$]' type='table'>
                <columns gridOrigin='A1:D1833:no:A1:D1833:0' header='yes' outcome='6'>
                  <column datatype='integer' name='CUSTOMER_ID' ordinal='0' />
                  <column datatype='string' name='CUSTOMER_NAME' ordinal='1' />
                  <column datatype='string' name='PROVINCE' ordinal='2' />
                  <column datatype='string' name='CUSTOMER_SEGMENT' ordinal='3' />
                </columns>
              </relation>
            </relation>
            <relation connection='excel-direct.0jmu2e31kfjnft1d01m9i1w9ux8v' name='Locations' table='[Locations$]' type='table'>
              <columns gridOrigin='A1:B14:no:A1:B14:0' header='yes' outcome='6'>
                <column datatype='string' name='PROVINCE' ordinal='0' />
                <column datatype='string' name='REGION' ordinal='1' />
              </columns>
            </relation>
          </relation>
          <relation connection='excel-direct.0jmu2e31kfjnft1d01m9i1w9ux8v' name='Products' table='[Products$]' type='table'>
            <columns gridOrigin='A1:D1264:no:A1:D1264:0' header='yes' outcome='2'>
              <column datatype='integer' name='PRODUCT_ID' ordinal='0' />
              <column datatype='string' name='PRODUCT_NAME' ordinal='1' />
              <column datatype='string' name='PRODUCT_CATEGORY' ordinal='2' />
              <column datatype='string' name='PRODUCT_SUB-CATEGORY' ordinal='3' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[CUSTOMER_ID (Customers)]' value='[Customers].[CUSTOMER_ID]' />
          <map key='[CUSTOMER_ID]' value='[Sales Data.csv].[CUSTOMER_ID]' />
          <map key='[CUSTOMER_NAME]' value='[Customers].[CUSTOMER_NAME]' />
          <map key='[CUSTOMER_SEGMENT]' value='[Customers].[CUSTOMER_SEGMENT]' />
          <map key='[DISCOUNT]' value='[Sales Data.csv].[DISCOUNT]' />
          <map key='[ORDER_DATE]' value='[Sales Data.csv].[ORDER_DATE]' />
          <map key='[ORDER_ID]' value='[Sales Data.csv].[ORDER_ID]' />
          <map key='[ORDER_PRIORITY]' value='[Sales Data.csv].[ORDER_PRIORITY]' />
          <map key='[ORDER_QUANTITY]' value='[Sales Data.csv].[ORDER_QUANTITY]' />
          <map key='[PRODUCT_BASE_MARGIN]' value='[Sales Data.csv].[PRODUCT_BASE_MARGIN]' />
          <map key='[PRODUCT_CATEGORY]' value='[Products].[PRODUCT_CATEGORY]' />
          <map key='[PRODUCT_CONTAINER]' value='[Sales Data.csv].[PRODUCT_CONTAINER]' />
          <map key='[PRODUCT_ID (Products)]' value='[Products].[PRODUCT_ID]' />
          <map key='[PRODUCT_ID]' value='[Sales Data.csv].[PRODUCT_ID]' />
          <map key='[PRODUCT_NAME]' value='[Products].[PRODUCT_NAME]' />
          <map key='[PRODUCT_SUB-CATEGORY]' value='[Products].[PRODUCT_SUB-CATEGORY]' />
          <map key='[PROFIT]' value='[Sales Data.csv].[PROFIT]' />
          <map key='[PROVINCE (Locations)]' value='[Locations].[PROVINCE]' />
          <map key='[PROVINCE]' value='[Customers].[PROVINCE]' />
          <map key='[REGION]' value='[Locations].[REGION]' />
          <map key='[ROW_ID]' value='[Sales Data.csv].[ROW_ID]' />
          <map key='[SALES]' value='[Sales Data.csv].[SALES]' />
          <map key='[SHIPPING_COST]' value='[Sales Data.csv].[SHIPPING_COST]' />
          <map key='[SHIP_MODE]' value='[Sales Data.csv].[SHIP_MODE]' />
          <map key='[UNIT_PRICE]' value='[Sales Data.csv].[UNIT_PRICE]' />
        </cols>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>ROW_ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ROW_ID]</local-name>
            <parent-name>[Sales Data.csv]</parent-name>
            <remote-alias>ROW_ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ORDER_ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ORDER_ID]</local-name>
            <parent-name>[Sales Data.csv]</parent-name>
            <remote-alias>ORDER_ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ORDER_DATE</remote-name>
            <remote-type>133</remote-type>
            <local-name>[ORDER_DATE]</local-name>
            <parent-name>[Sales Data.csv]</parent-name>
            <remote-alias>ORDER_DATE</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ORDER_PRIORITY</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ORDER_PRIORITY]</local-name>
            <parent-name>[Sales Data.csv]</parent-name>
            <remote-alias>ORDER_PRIORITY</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ORDER_QUANTITY</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ORDER_QUANTITY]</local-name>
            <parent-name>[Sales Data.csv]</parent-name>
            <remote-alias>ORDER_QUANTITY</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SALES</remote-name>
            <remote-type>5</remote-type>
            <local-name>[SALES]</local-name>
            <parent-name>[Sales Data.csv]</parent-name>
            <remote-alias>SALES</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DISCOUNT</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DISCOUNT]</local-name>
            <parent-name>[Sales Data.csv]</parent-name>
            <remote-alias>DISCOUNT</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SHIP_MODE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[SHIP_MODE]</local-name>
            <parent-name>[Sales Data.csv]</parent-name>
            <remote-alias>SHIP_MODE</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PROFIT</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PROFIT]</local-name>
            <parent-name>[Sales Data.csv]</parent-name>
            <remote-alias>PROFIT</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UNIT_PRICE</remote-name>
            <remote-type>5</remote-type>
            <local-name>[UNIT_PRICE]</local-name>
            <parent-name>[Sales Data.csv]</parent-name>
            <remote-alias>UNIT_PRICE</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SHIPPING_COST</remote-name>
            <remote-type>5</remote-type>
            <local-name>[SHIPPING_COST]</local-name>
            <parent-name>[Sales Data.csv]</parent-name>
            <remote-alias>SHIPPING_COST</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CUSTOMER_ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CUSTOMER_ID]</local-name>
            <parent-name>[Sales Data.csv]</parent-name>
            <remote-alias>CUSTOMER_ID</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PRODUCT_ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[PRODUCT_ID]</local-name>
            <parent-name>[Sales Data.csv]</parent-name>
            <remote-alias>PRODUCT_ID</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PRODUCT_CONTAINER</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PRODUCT_CONTAINER]</local-name>
            <parent-name>[Sales Data.csv]</parent-name>
            <remote-alias>PRODUCT_CONTAINER</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PRODUCT_BASE_MARGIN</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PRODUCT_BASE_MARGIN]</local-name>
            <parent-name>[Sales Data.csv]</parent-name>
            <remote-alias>PRODUCT_BASE_MARGIN</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sales Data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CUSTOMER_ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CUSTOMER_ID (Customers)]</local-name>
            <parent-name>[Customers]</parent-name>
            <remote-alias>CUSTOMER_ID</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CUSTOMER_NAME</remote-name>
            <remote-type>130</remote-type>
            <local-name>[CUSTOMER_NAME]</local-name>
            <parent-name>[Customers]</parent-name>
            <remote-alias>CUSTOMER_NAME</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PROVINCE</remote-name>
            <remote-type>130</remote-type>
            <local-name>[PROVINCE]</local-name>
            <parent-name>[Customers]</parent-name>
            <remote-alias>PROVINCE</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CUSTOMER_SEGMENT</remote-name>
            <remote-type>130</remote-type>
            <local-name>[CUSTOMER_SEGMENT]</local-name>
            <parent-name>[Customers]</parent-name>
            <remote-alias>CUSTOMER_SEGMENT</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Customers]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D1833:no:A1:D1833:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PROVINCE</remote-name>
            <remote-type>130</remote-type>
            <local-name>[PROVINCE (Locations)]</local-name>
            <parent-name>[Locations]</parent-name>
            <remote-alias>PROVINCE</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>REGION</remote-name>
            <remote-type>130</remote-type>
            <local-name>[REGION]</local-name>
            <parent-name>[Locations]</parent-name>
            <remote-alias>REGION</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Locations]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B14:no:A1:B14:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PRODUCT_ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[PRODUCT_ID (Products)]</local-name>
            <parent-name>[Products]</parent-name>
            <remote-alias>PRODUCT_ID</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PRODUCT_NAME</remote-name>
            <remote-type>130</remote-type>
            <local-name>[PRODUCT_NAME]</local-name>
            <parent-name>[Products]</parent-name>
            <remote-alias>PRODUCT_NAME</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PRODUCT_CATEGORY</remote-name>
            <remote-type>130</remote-type>
            <local-name>[PRODUCT_CATEGORY]</local-name>
            <parent-name>[Products]</parent-name>
            <remote-alias>PRODUCT_CATEGORY</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PRODUCT_SUB-CATEGORY</remote-name>
            <remote-type>130</remote-type>
            <local-name>[PRODUCT_SUB-CATEGORY]</local-name>
            <parent-name>[Products]</parent-name>
            <remote-alias>PRODUCT_SUB-CATEGORY</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Products]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D1264:no:A1:D1264:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='CUSTOMER ID (Customers)' datatype='integer' name='[CUSTOMER_ID (Customers)]' role='dimension' type='ordinal' />
      <column caption='Customer Id' datatype='integer' name='[CUSTOMER_ID]' role='dimension' type='ordinal' />
      <column caption='Customer Name' datatype='string' name='[CUSTOMER_NAME]' role='dimension' type='nominal' />
      <column caption='Customer Segment' datatype='string' name='[CUSTOMER_SEGMENT]' role='dimension' type='nominal' />
      <column caption='Discount' datatype='real' name='[DISCOUNT]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Order Date' datatype='date' name='[ORDER_DATE]' role='dimension' type='ordinal' />
      <column caption='Order Id' datatype='integer' name='[ORDER_ID]' role='dimension' type='ordinal' />
      <column caption='Order Priority' datatype='string' name='[ORDER_PRIORITY]' role='dimension' type='nominal' />
      <column caption='Order Quantity' datatype='integer' name='[ORDER_QUANTITY]' role='measure' type='quantitative' />
      <column caption='Product Base Margin' datatype='real' name='[PRODUCT_BASE_MARGIN]' role='measure' type='quantitative' />
      <column caption='Product Category' datatype='string' name='[PRODUCT_CATEGORY]' role='dimension' type='nominal' />
      <column caption='Product Container' datatype='string' name='[PRODUCT_CONTAINER]' role='dimension' type='nominal' />
      <column caption='PRODUCT ID (Products)' datatype='integer' name='[PRODUCT_ID (Products)]' role='dimension' type='ordinal' />
      <column caption='Product Id' datatype='integer' name='[PRODUCT_ID]' role='dimension' type='ordinal' />
      <column caption='Product Name' datatype='string' name='[PRODUCT_NAME]' role='dimension' type='nominal' />
      <column caption='Product Sub-Category' datatype='string' name='[PRODUCT_SUB-CATEGORY]' role='dimension' type='nominal' />
      <column caption='Profit' datatype='real' name='[PROFIT]' role='measure' type='quantitative' />
      <column datatype='string' name='[PROVINCE (Locations)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Province' datatype='string' name='[PROVINCE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Region' datatype='string' name='[REGION]' role='dimension' type='nominal' />
      <column caption='Row Id' datatype='integer' name='[ROW_ID]' role='dimension' type='ordinal' />
      <column caption='Sales' datatype='real' name='[SALES]' role='measure' type='quantitative' />
      <column caption='Shipping Cost' datatype='real' name='[SHIPPING_COST]' role='measure' type='quantitative' />
      <column caption='Ship Mode' datatype='string' name='[SHIP_MODE]' role='dimension' type='nominal' />
      <column caption='Unit Price' datatype='real' name='[UNIT_PRICE]' role='measure' type='quantitative' />
      <column-instance column='[PROVINCE (Locations)]' derivation='None' name='[none:PROVINCE (Locations):nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.65995' measure-ordering='alphabetic' measure-percentage='0.34005' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:PROVINCE (Locations):nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;NUNAVUT&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ALBERTA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;NEW BRUNSWICK&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;SASKACHEWAN&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ONTARIO&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;NEWFOUNDLAND&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;NORTHWEST&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;YUKON&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;PRINCE EDWARD ISLAND&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;NOVA SCOTIA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;BRITISH COLUMBIA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;QUEBEC&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MANITOBA&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Spain&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.0jvq6cl0wmxlhb101vrjb14io8e1'>
      <datasources>
        <datasource caption='Sales Data.csv+ (Multiple Connections)' name='federated.0jvq6cl0wmxlhb101vrjb14io8e1' />
      </datasources>
      <datasource-dependencies datasource='federated.0jvq6cl0wmxlhb101vrjb14io8e1'>
        <column caption='Province' datatype='string' name='[PROVINCE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
        <column-instance column='[PROVINCE]' derivation='None' name='[none:PROVINCE:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.0jvq6cl0wmxlhb101vrjb14io8e1].[none:PROVINCE:nk]'>
        <groupfilter function='level-members' level='[none:PROVINCE:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
    </shared-view>
  </shared-views>
  <worksheets>
    <worksheet name='Order Quatity Evolution'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sales Data.csv+ (Multiple Connections)' name='federated.0jvq6cl0wmxlhb101vrjb14io8e1' />
          </datasources>
          <datasource-dependencies datasource='federated.0jvq6cl0wmxlhb101vrjb14io8e1'>
            <column caption='Order Date' datatype='date' name='[ORDER_DATE]' role='dimension' type='ordinal' />
            <column caption='Order Quantity' datatype='integer' name='[ORDER_QUANTITY]' role='measure' type='quantitative' />
            <column datatype='string' name='[PROVINCE (Locations)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Province' datatype='string' name='[PROVINCE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[ORDER_DATE]' derivation='MY' name='[my:ORDER_DATE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[PROVINCE (Locations)]' derivation='None' name='[none:PROVINCE (Locations):nk]' pivot='key' type='nominal' />
            <column-instance column='[PROVINCE]' derivation='None' name='[none:PROVINCE:nk]' pivot='key' type='nominal' />
            <column-instance column='[ORDER_QUANTITY]' derivation='Sum' name='[sum:ORDER_QUANTITY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ORDER_DATE]' derivation='Month-Trunc' name='[tmn:ORDER_DATE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[ORDER_DATE]' derivation='Year' name='[yr:ORDER_DATE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0jvq6cl0wmxlhb101vrjb14io8e1].[yr:ORDER_DATE:ok]'>
            <groupfilter function='member' level='[yr:ORDER_DATE:ok]' member='2012' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0jvq6cl0wmxlhb101vrjb14io8e1].[none:PROVINCE:nk]</column>
            <column>[federated.0jvq6cl0wmxlhb101vrjb14io8e1].[yr:ORDER_DATE:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0jvq6cl0wmxlhb101vrjb14io8e1].[none:PROVINCE (Locations):nk]' />
              <lod column='[federated.0jvq6cl0wmxlhb101vrjb14io8e1].[my:ORDER_DATE:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0jvq6cl0wmxlhb101vrjb14io8e1].[sum:ORDER_QUANTITY:qk]</rows>
        <cols>[federated.0jvq6cl0wmxlhb101vrjb14io8e1].[tmn:ORDER_DATE:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Price table'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sales Data.csv+ (Multiple Connections)' name='federated.0jvq6cl0wmxlhb101vrjb14io8e1' />
          </datasources>
          <datasource-dependencies datasource='federated.0jvq6cl0wmxlhb101vrjb14io8e1'>
            <column caption='Order Date' datatype='date' name='[ORDER_DATE]' role='dimension' type='ordinal' />
            <column caption='Product Category' datatype='string' name='[PRODUCT_CATEGORY]' role='dimension' type='nominal' />
            <column caption='Product Sub-Category' datatype='string' name='[PRODUCT_SUB-CATEGORY]' role='dimension' type='nominal' />
            <column caption='Province' datatype='string' name='[PROVINCE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Unit Price' datatype='real' name='[UNIT_PRICE]' role='measure' type='quantitative' />
            <column-instance column='[PRODUCT_CATEGORY]' derivation='None' name='[none:PRODUCT_CATEGORY:nk]' pivot='key' type='nominal' />
            <column-instance column='[PRODUCT_SUB-CATEGORY]' derivation='None' name='[none:PRODUCT_SUB-CATEGORY:nk]' pivot='key' type='nominal' />
            <column-instance column='[PROVINCE]' derivation='None' name='[none:PROVINCE:nk]' pivot='key' type='nominal' />
            <column-instance column='[ORDER_DATE]' derivation='Quarter' name='[qr:ORDER_DATE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[UNIT_PRICE]' derivation='Sum' name='[sum:UNIT_PRICE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ORDER_DATE]' derivation='Year' name='[yr:ORDER_DATE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0jvq6cl0wmxlhb101vrjb14io8e1].[none:PROVINCE:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0jvq6cl0wmxlhb101vrjb14io8e1].[sum:UNIT_PRICE:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0jvq6cl0wmxlhb101vrjb14io8e1].[none:PRODUCT_CATEGORY:nk] / [federated.0jvq6cl0wmxlhb101vrjb14io8e1].[none:PRODUCT_SUB-CATEGORY:nk])</rows>
        <cols>([federated.0jvq6cl0wmxlhb101vrjb14io8e1].[yr:ORDER_DATE:ok] / [federated.0jvq6cl0wmxlhb101vrjb14io8e1].[qr:ORDER_DATE:ok])</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sales Data.csv+ (Multiple Connections)' name='federated.0jvq6cl0wmxlhb101vrjb14io8e1' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0jvq6cl0wmxlhb101vrjb14io8e1'>
            <column caption='Order Quantity' datatype='integer' name='[ORDER_QUANTITY]' role='measure' type='quantitative' />
            <column datatype='string' name='[PROVINCE (Locations)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Province' datatype='string' name='[PROVINCE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Region' datatype='string' name='[REGION]' role='dimension' type='nominal' />
            <column-instance column='[PROVINCE (Locations)]' derivation='None' name='[none:PROVINCE (Locations):nk]' pivot='key' type='nominal' />
            <column-instance column='[PROVINCE]' derivation='None' name='[none:PROVINCE:nk]' pivot='key' type='nominal' />
            <column-instance column='[REGION]' derivation='None' name='[none:REGION:nk]' pivot='key' type='nominal' />
            <column-instance column='[ORDER_QUANTITY]' derivation='Sum' name='[sum:ORDER_QUANTITY:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0jvq6cl0wmxlhb101vrjb14io8e1].[none:PROVINCE:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.0jvq6cl0wmxlhb101vrjb14io8e1].[none:REGION:nk] / [federated.0jvq6cl0wmxlhb101vrjb14io8e1].[none:PROVINCE (Locations):nk])</rows>
        <cols>[federated.0jvq6cl0wmxlhb101vrjb14io8e1].[sum:ORDER_QUANTITY:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Order Quatity Evolution'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0jvq6cl0wmxlhb101vrjb14io8e1].[yr:ORDER_DATE:ok]' type='filter' />
            <card mode='checkdropdown' param='[federated.0jvq6cl0wmxlhb101vrjb14io8e1].[none:PROVINCE:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0jvq6cl0wmxlhb101vrjb14io8e1].[none:PROVINCE (Locations):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0jvq6cl0wmxlhb101vrjb14io8e1].[my:ORDER_DATE:ok]</field>
            <field>[federated.0jvq6cl0wmxlhb101vrjb14io8e1].[none:PROVINCE (Locations):nk]</field>
            <field>[federated.0jvq6cl0wmxlhb101vrjb14io8e1].[none:PROVINCE:nk]</field>
            <field>[federated.0jvq6cl0wmxlhb101vrjb14io8e1].[yr:ORDER_DATE:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Price table'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0jvq6cl0wmxlhb101vrjb14io8e1].[mn:ORDER_DATE:ok]</field>
            <field>[federated.0jvq6cl0wmxlhb101vrjb14io8e1].[none:PRODUCT_CATEGORY:nk]</field>
            <field>[federated.0jvq6cl0wmxlhb101vrjb14io8e1].[none:PRODUCT_SUB-CATEGORY:nk]</field>
            <field>[federated.0jvq6cl0wmxlhb101vrjb14io8e1].[yr:ORDER_DATE:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0jvq6cl0wmxlhb101vrjb14io8e1].[none:PROVINCE (Locations):nk]</field>
            <field>[federated.0jvq6cl0wmxlhb101vrjb14io8e1].[none:REGION:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Order Quatity Evolution' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Price table' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9WXAc15nv+cva90JVASjsALEQAHeQBEhKpEiR1Gq3La/d9rX7urvvRMyN
      6IcbE7PdiBsxjpiHeZk7cWOiZ2KiF7fDdnuTLMuSKEokuJMAsa+FfS0AhSpUofZ9yZwHkBRl
      WxZAgpQF1u+BRGVl5ck8mV+ec77v+58jSJIkkSfPM4rs8z6BPHk+T/IGkOeZJm8AeZ5p8gaQ
      55kmbwB5nmnyBpDnmSZvAHmeafIGkOeZJm8AeZ5p8gaQ55kmbwB5nmnyBpDnmSZvAM8wfr//
      8z6Fz528ATzDpFKpz/sUPnfyBpDnmUbxeZ9AnjyPTWSZf/nFB2QyGVpe+QZqZwe3HG6qDjzP
      i40qfvmb66QUZr73vZe5+PNfE0VJy5mv0tpQjJAXxDy7rK6uUlpa+nmfxmOTS8WJ5eQERz7g
      4oIOKbDK9/7mDd760a8x6eSUnf4qxvG3mRIqmHap+e9fr+QnF0f4+7/5Rr4LlOeLj1ytY2Xw
      Ir/tT/HVM3vIqjQY1AY0yjT+SBqTXk2hzUJE08BzJeu89d51VgMhIN8FyrMDSC518vO7Kf7z
      f/wqSpKYkn4m5mcIZMwcqlMyMb2MdmyB3a+9SoP6JQonr5H1bLR8+S7QM8xO6QKFl8e4cGsI
      EKg9dJJmS5Ird0Y5ePIstYUKbl++TNLayNkju+i4dIF1WRHnz55ErxTyBvAss1MM4HHIjwHy
      PNPkDSDPM03eAPI80+QNIM82IeFdmqF/YIRwMockSQS9KyyvBZ9YidlkGMfgAFNLa0iSRCrm
      Z3ignzmXn80ObPMGkGdbiK7O4nBFKS3S03G3DzEXZsnpZ9XjeUIlZhnq7kVltZNaHGTKl8Lt
      cmMpLsU/O0Ygs7mj5A0gz7bgCoTZu7uR0opaihRp0goze/bUolIIT6bATICUtoL6yjL2ndiL
      d2aVqvpmzMo0GIswbDLClQ+E5dkW1DIZyVwWSZLIyGSonnSBchVCNkkOCSEeR2EwE1yZZTGh
      puXAbuSbtLu8AeTZFiqrqrh26yYjqRgUHkSKr3Htyl1coQhpNLQ2V21vgTIzZaY4Fy98QCgQ
      5/Vvv8HA5Rsk5QZ8K07aTjyPSf3Zh8kHwp5hnkwgLMfCwgrVNVU8oc7PHxDzLRPT2Ck2KLf8
      27wBPMPkI8G/1wVKp9Osr69/XueS5ykTiUQ+71P43Mm3AM8w+RbgTw6Cs4z39bAWTVNc3Ywp
      F8VaV4sU8BAUNaTcMzh9Mew1TeyusuDoHqD6SBuqqBtfTo8Q8SBTq5ibmicLGIursatyFNTW
      oor7WY0IyMLLzK4GsZXX0lxXwvRAD55IGlVBGScONjy1Ssjz7CL/4Q9/+MM//lWMX/7sHfYe
      bcNmMXHzzTcpOn6MyMhNejw55ruuUbj7IHcuvE/1gXp+9n/9H4QNe7BHh7nukrFy9wLKihZM
      0RnaJ6OcaGmi561fYzh2HPlSLxcHA4TGb6CobGHi5kX01TW0//aDe+UVUGDUPdaF+WdH+Ohu
      L7PT08gMZaiTq1y7cYfpWScaix11xs+NG7cYn5xBZrKjj86xmC4k4x7Dk1QSXBjmbv8IwZSC
      kmILjo53WcuVU2ySMdHfQe+QA19MQJ32cO1mJ7NzS5hKixm9fY3RiRkSciN2i+GxruFJE41G
      MRqNm9pXjKzy67d+S3dPNxljDeU2HemYjwtvv0lH3xi64ioSS/288347PcOLNNQZePsXb9Pd
      P4jcUklJwePdzw3S9LZf4KMbHbRf66CisZmx6+9y+VY3ClstisAEv3zrAov+HHW15cg3ccQ/
      6QZNR3wMDw3SfPi5P/hOrtJSVV3LhOxDUqKIcdcx0rO3ie0verCPSmumqrIMy3qaCruV3t9z
      C8gUKiqqa4kMtpPIZElHN8orqm6muqxwU1XyaWSTMo6eO4/JP8d0MEg85KL17CsYM166J5aI
      KkPsbTtDsRFudQ5RsUtNJOFjzZvjcFOGfreJl15pBVFEJoaJyavAPYlU1sRqIMnxF86iVwqs
      u5wcfv4MZVYTpN10Jwy89PIxZDusZynoCnnj298luNBDr9sHDTZCgRUMFW28sk/Fpb55zh0/
      wHcbj9Pz/vskdXa+/t3v4RrvYtHvhxrbNpyFiqPnv8KRVID2W2MUZhboU+/hBz9oRhKztL83
      z9f++geY5WzaA/UnI8FaawVnz52nsdKKgIiYAzGTQZDLSfhX+If//X8hseskFUY1gkzJ6cN2
      rvUsf+rxBEFCFEFKZ5AUCtLRdf71//wvTCob2VtmRmut4MVz5zm+v3YrtfIpxOlsv8TdsVVs
      BVpiKLFoFCgNBuTpFKlcDp1Og0yhRS5kkbIZ+jpvoLVVIKYyaPQ6FDIZCoWCyMIM+qrdKLNx
      EkodrYeaGLpzhW7HIlIuRvfNq1y82I4nY+PEfhvXL33E+NLOmnNHkCuZ7v6Ij7rnqKm2A2Ar
      rkcZGefN96/i9gRQaxUM3vwI3b7jFMlkjHVc5KZjlfKSx3uZ/T7O6SmK6+oRQ1GW53r48Y/+
      mQ/uOAgGV3jvFz/hxz//Lf7k5l5Af8IABJRqLUaTGa1KRcuxGn75f/8/vN21zKHdFRiKqvn7
      //V/Q+u8g2Mlilwup3TPKcKLA8hkAnK5HJkACAJy2UYxrWf38dZ/+3/51wuDHG9pQGu287f/
      6b9Qm52ke2qN5LqT3/32bS7cHNiGatLRduYsJw834Vr1UKxI4Fj241tYIGc0UaBRsLC0SsS3
      QBIjgkLJ8bN/gegdI6bUEVldIhBNEAgEGV9cZrH/Oi73IpMLIaJZBcdPnUQR9ZOS6zjy3Auc
      P3+aImWcpKqE0yePEllf24Zr+PMhFlijsOkkX3/tFMN9vYi5HKKg4uDJ85xorKFydxWOzjtY
      mk/QXFFAfH0N+8EX+fJzjTjGZ7btPKRshLnVJPWVxRjKSqkoa+Iv//LrxNdXqCit4syXv8n+
      Ehnr0eymjrdjvUDx9SXuDk6A0sCRtjaM8gyOgV4icguHD+5BI88yOdjHalzJseOHUca9hOTF
      GAnijYhY1Cn6Bico2rUPszKDvbQMxARuT5RMeJkZV5jdBw5jlYXpHRgjLSo5dKINz/gAa3EZ
      h1pbser+vAPtW/ECZWJ+rl25gj+t4dyrLzHU/h77zr7OdMclwupyzp5qZaHvMv0zXkDNmVdf
      YPjGdaJyMy+eP0ehfnvqIh0JsBoTqS7Z6FK5pnq5NbDIqde/SpE8RPtHVzDsOsrJQ7Wb6gbt
      WAPI89k8qhtUymVZ8wexF21v1+bz4M/7FbVFRFH8vE/hC4UkSY9WZ4KMIpt1R9T3jjKAdDq9
      I27K0yKbzZJMJj/v0/hcyesB8jzT7GADkPAuzzLimCSazBKORgGIhtZJZgExidPpIidKSJJE
      KBQiEw8wOjTE+PQi6ZxEJh5ifHSE2WUvoiSBJBFaW2ZkbJJoKvegpHQswNjoCMveMNFQiCyQ
      y6QJhMIABD0r+OMbMzGHwyFEUcQ1P8HQ8AjuQBQxncDpXCYjAmRZmJkjlRORRJHlhUUyQMS7
      zNDQEENDQyx6goS8y4wMj7IWSjzVWp0Z6Sf0kNoq4lvizq3bLK/HEDMJJocdRHIbksh11xxz
      K4+eWxZYneXWjRuML37sUROzKSYGu+gZniKdA/e8g9tdw6QliWwqyqRjjNjmHEDADjaAqGua
      SW+aIqueRDTO8uoqAJ7FKUJJiHlWGJ2cIZjMgCThXFoiFfWQUVjRZPyML3iYHhtFXVBENhlF
      EiUkMcvkzCIGhcjckmujoFyCwYExDJZCBDGNe3GRFJBNxplbWgExycLUONOLXiRgeXkJMSfi
      9gUpKbaxODpMIBLBMTHCejhFJrjM7e5RYlmRbNzFpGOClUAGtd6MjgxJmRqLNsnIhJuiYivR
      UOgp1ukoVy5eYyl+/9L9XLvVT1F5GRqFjNWFaVzTC6xls+SyfqYm3Mw7Fx+5vFgiTUV1NdMd
      t7ivLJ4fvsVSXEux1YAUWeD2yBo2+SrXe5w4Z6ZYc87j3cKs7zvWABbXIrTsaaCktIICvZyV
      6RFu3brF+MLG22Q1EOHI7kIWV6MfC6gFGWZLITaLETGXw2jUMDM+hlJvQSaTgUxOoU6OO5bG
      bttww2VDHuT2eirLSym3FyKlg9y9dYuOuz2EU5AKBhBK69HGPCSzHzvcFBoDxcVFaJUCOUnA
      XmjDFwiw4gpSVW5BANYW3OxqO0TQtYxKZ8RmKcBstWIyWtBKIcamnFiflidGStI17OHU0foH
      m6JBP9FYiLHRCeKZHOUNB2gotyEACqWN1mP70Cgf/RGrKCqgv6cbqbiSjYSNDCvza4TW55lf
      DRLz+Kg40ELzkXOI/mlq9x6mqnhzqR332bEGoJEJJHL3HzgZJbuaaG1tpb7CBlKCmbFx+icX
      mBl3cN8RLGXT9N28wIWuBXbXlFKxu4UzLxxnfWGCeDaHmI0QyhkwigkWZ6eIpETkahViKv2g
      XEFloqW1lSMtBzCowOOaYWp4BMfUDOuRjwecIdcUb/3852SKGyhQgNZWjBR040/JMOs3pEyj
      k2PM9PczPjPPxx0uQFBz+OQZTrQ0MDo8+mQr8h7Ono/ompil/U43HZ39G6chk2Ov2cPZU/sY
      vNPDti+3oS/mlVdfwhhbZT0NIENtMHP0+bMYwk4WAwESyQwQB7SPVMSfSIb74pHNbmhSAQpM
      Kjpu3GTeuYTaaEcU05QUFxNZdyPlBOT2Wk4ebYGwG11xKZGAH4tJTUHlEfaWyVhcSxBacjA0
      PkdMVFNfU4FMyjA2OEAsJ5GR5JSXV6LW6Ikuj9A7OoU/IUMv5DCXlaHKZVmPhMgkZLSdPs3e
      ch0L6yIqklhthcQzAi+cPol/aQaZUkdaUKLPuAgpqzBJUQwFAlGxghdOHsWc9RHTlKBMhUnI
      1Ng0OTpudTDrXEFjLqWyxPJI9RWPx9HpNpekZipr5NTxI5QoUpQeOUl8bhB5UTW+iW7uDk5i
      qdmDfG2UD67eYXJhgaKiIi6/+y7DY+Ok1EXUlm09F6jjoze50zeOPyGnaXcJc/Nequwqrly+
      zmpCxrHnn2f62u+43TnInhdexj10hfZb3cyuBqmuqUWv/ux0uB0VCEsmk3k36Bbw+XwUFm69
      CyVmU3T1DNF2om1TGZfbgW92AK+2geay7c2wzRvAM8yjGsBOYkcFwpRKJTvInp84crkcleqJ
      T2DyZ82OMgC5/Gk1yDsD2b1072eZHesFypNnM+woL9DDiIkA169dZ2JymrTKig4PH713kzn3
      GoU6aL9+h7nZWTS2alYXp7FZC3B036RvdIK0woxn9BbdjmlW/QnKS+3IhBgf/uYdZpwrIFey
      7F6npMiCyzmNqFBz99IHjM3OsRYTKDFLXPzgFhX19fjmR4jILKwtTKPVCdy5cYuxqVmUJjvu
      pUUKC22EPUs4gymSAReozAxd+R1xSw1mpZ8RRxCTMszNmx1MzS6iKigmuuygo3uQWU+U2ooS
      BOHRZuDZiiSSxDrvvvMOdzrvktRXUFloIJeK03PnQzrHQ+xtKGdtfoT33mzHsK8JQ8bP2z//
      FXcHR1FYK7Cbty6JdE31896bV7AdPcD9s1xydPK7D9oZmFqhtqqI3ts36ZlZo7muksW7F/jJ
      xTs4V8LUNtawmVmCdmz7tzA1TV3rC1QY5dzpHKDsQCl7Dp+irs4KIScVe47TUrvhmhtYTJCO
      uogpq3nl5WpEUWI2YOfsyRb0944nSSIldS20tDSQjfromd4IqKXTSTQ5kYLyJl44tJuOO51I
      WLAYBCZmVrDl4pCTSCUSxH0uMgW7eOngLiREHCsbcYFcJk0yI0ORTSLmJDRFhSyMjFB9oox4
      IsnctI+Dp85hVW8EzYYcHppbT2E3KHnEZ3/rKPScfv3raLIerg64oNGOTKFiz5EjxHrcAJjs
      uzjaGCSLRDbkRF51kjfqsgytrUHV1t2glrIGjtQHST+0rbB6H3/V2Epfx1WSaSX7206R6u0C
      RHxBGX/1d39D8Rb6NTu2CxTMQpFOjUyuRCuDdC7F4N3rXLp+h1Aix8zgbS5evIw7upHYIsZC
      qAoK7/WL5UR8i7RfvMj1rmEy96JQ86NdXPyonWX/H+bfeOZHaW+/QlphAqCgZBdC0EnkobwZ
      fUUzDfoolz78EFcoQ9K3yMWLF7l2u4/EQ/krgtzA3mIYX4uDmCUsKjAS59aH7zK4sMb+o224
      Rju4eneUp+bzUmpIe2e51u/i9PMH7p2nAqNB90B4otEZUCk2HimFuZKc8w7vXO7F+oieJq3B
      iPL3JvnUqOUMddxEX7GfQqsek/Gh8vUS7/34n/nJrz8klvvD4/0xdqwBVBvlDMy7SUa8+NIy
      NHI1h46f4eUzz2PWyqk/dJLXXnuJknvT6SksZQTmR0mk4gRDcYy2Kl58+WVOHd3HvXvKrn3H
      eO2V81TZTaTDASKJGKsr6wgqGcXVzdSVFVB0PzVBrqK2pojpGeeDc0pGQhjLm3jxuSZcS2to
      Cqt57bXXePHkEbS/1xYXNR7COzaAKFNSrEwws57jcEsLaoVAOJKk5cQZrEKMpPh0vF5S1En3
      XJoXnz+KWiYgiiKiJJHN5sjlcmRzOcRcjpwokstmicwPotrzCl976TCzM/OPVKaYy5LL5chl
      s4j3tAtTg3cx1h2huaoIQZLIZu/vk0Njr+M73/kryhVB/JvM8t6xYwCdrZTM6gTDc36OP3cc
      jUKGUqlFo1GAICBTajBoNh5+mUyGqaAQizZNT98YOlsJirSXoaExVoNJykuKkQkCMpkSg0GL
      oNBg0Wbp7XVQ2niQMqsOuVxJxa56hJgPSVeATqXGWlSIXBAoKrajVcnR69VMDPYw74O2I82o
      5HIMBj2CIEOl1mHQadBo9aiUcvQGMzatGllBIbV11XhnBpnyxKivq4WYh76BEWy1eymzGB65
      G7SVMUAmGmJ4sJfhkVECOQ1zPddRF5Vx58MLeAM+3CEJMTDJ3WknK+PjlBz5C4T56/QtxHnx
      zHPoVFv30E10X6Z70cPKxBQqlUivw4NZFqW3r4/RCSelxTo+uvghgVCY1ZiCOkuOi5dvU3bo
      NM2lm7uuHRUIy7M1HksSuR7AXlz02TtvEzGvm5ylBNM2j1p31CA4HwXeGo8liSy0PdX61tqK
      AZHtLnJHGUBeErk18pLIHTwIzpNnM+yoFuBhXPPj+CIZBEFGRV0TRkUSty9JRVkhqWiA2YUl
      RJmW2oZaMvEoZrMZEPE45/EEY2iMhdRW2ViamyOJnvq6SpSyp+V0/zMkl8AxNEwwJefAkSMY
      VQLJmJfBvnHSgKW0jqYKPcNDDhTWag40lLI0NcpyKMe+AwcxaR4tTSUdXGXaL7C3tgSAbDLC
      6IgDU0UjZdo0/aOTZEWwltWhiCyyFsmi0Bg5eKgF/SbSnHZsC2AsKCTsdqMvKkKjlBFcmcEx
      PkckC6HAOqgNWDRxxma8LC7el+1lWfEEsdvt2AqMuOYmiEtadEKSaOrZ7lqJyRii1oLdnOJm
      xxgACqWOiupqCjUiK+sRludnUVvsePq7cMU8LPmhQJGmzzH9iKXmuH2zk/6hvnufJaZ67xCV
      6xntvk1E0lJZVU25McmcO0lhSSVVFcV4llYQN/lk71wDsBRRYDJSVFyMVp7D5ZfYU6/H642C
      mGZlcY7ZpQBFhaZP/C4d9TM9PY1zxYveaGR1cZqAqMWs2bFVtSlk+kK0yVX6h5ep272x3pdC
      paeiupJ0RuJA8y5qmg9Ta1ORs5VSpC/lRGsTqVSacvujeYu8k33odp/A8uBNniGU0nKoZT+1
      lRaSaYHKqmrWvDleOF5LYWklBWqJkoZ9GPOrRH5MJhVmatKBwWVAbpdzsFTD7r0HKVDGmFtb
      /4SoQ2spZXdjHTKZApVKwWlrGe6Jfmb8Jey2bX0Nqp1EVXMbBsssQ7OzNJUdAiDlX8Evt3HA
      pCbsnmXIGeHsmWMoxCw9t29QfuAk5ZZHmRo9ytvvXEZTVs3s7Bz7j5+n2iZHyKXJiJDN5VDI
      5eQic4Q0NZjlgJhhbGKF5lPnNl3KjjYA4V56dNzrYs8Lb9BUImeof4xkTsQxPI5CDkX1rQhh
      L+3t7dgqa0n5l7lzx43BWkmVLYdjcoVsVuJw3TPc/wfCrikuXLtLNpuldO9pnOOD6GoO4puf
      o67+GDIBem9fYT6qYXFqmheer+Jq9ywVSx5qD53m+f1bXSVSz3/3P/1nJDHHh5faKdHEGJ0I
      U1Wp5zc/+ie0RXU0tmgZvLPA0WOnEASBeGCFnKmCAtXm79WOCoTlFWFb43EkkXd7hjj2tCWR
      mgaay/OSyE8lbwBbIy+J/D0D+KKvEpm7NyNZns0Ri8XQ6/WfveMOZke1AHm2Rn6VyM9aIyzq
      Y9gxja54F3tqilicHGF5PYbJXoNdGWF6eR2N2U5jqY6AZKLCqmbGMUxI1LF7l53psXGSOSir
      28+uEtOfKipPns+FP5EOneJX//jPaKqamL72GzJle+n57W+wtbRQbDIzcON35Mx1lNttJKav
      cXlJh2bxGh1uJTVFKuL+ZW4MrbG/qQZTgQW95um7EBccXUx4slTYC5jvv8nNQQcLTg/FJhmX
      r95iZnqSuNxCcG3pQV94ZWICobAQZWKdS9e7KCqtRJNd5c0LA+xuqsE91k/caCc0N8id7kHW
      YxBfm6CzZ5RZp4+KchN3r11nbGoemcmG1aB56te9WbYkicyEuX3tOv1z6zTVVgCQjq1z8Z23
      7q0SWU1ieYB3LlymZ2SJht1W3v/Fr7k74EBpLaf4ESSRq9MDvPfW1U9IIsOeGd7+zTuMr4TY
      tasGJVF++l//K+r9J4kNXuQnF29vkyQyuoRbqOSbh/eTVC/x455JjJkosxMTyBu0kE0yPzuF
      SqWiCkCSuNu7wJf/x7/ELhdYm75FwO1kYkJOs6mM4oItX/9jIuKJgiS6kahBEIycevUUiXkH
      vrV1yvcc51C1kc6ufrIa9YNfpRMJcsD6mo9Co5rVYASzKU2RQWRo2o8tHkMWj+AKCZx7+RVk
      Yo652QSnzx7DqFOQ9U8SUVZw7kwjm1+r8AuAXMP+tlP09XU92BQKrKAra+U7e5Vc7p/jxbY9
      /FVDG70X3iMQdCKrfP6xJJHmkjoO1wUekkSKTA2NcvTL36WuQIkgg7HOO1jLy0nkJKIBgb/8
      u7/Bvi2SSIUKMZ1ElDa8KzqdDqXGSuvJk+ypsYPKQEvrCVqad3FftaaSZYk/JOAsq9/PyZMn
      qbRtxxqxW0OMLCJqKyhTZXHGJNIJH3euXmFo2oPJbGB+tIv2K+0IxpI/IiiRWF8PUN3UgH9p
      lRxgrjxA1uXYmPk5nUWp1aKSy1AoleQia1xr/4iL7Z1kzXXsK8nQfqmd5fXYU7/uJ4ZMhdmk
      +4RJW4trkYcdvHnhGi5PAI1ezcidy2j3Hqe04PElkTqjCdUnJJFZ1r3r3PrgV/zjT95kxTnB
      ilRBU6kRkFDrRd7/8b/w0zc/2rQk8tNbAE0lx6oS/H//+E8kgjF+8PevcX2qkwKbDSMgyBSY
      CyyYjTpCgoAgyHjlKy/yr//w3ygtL+NQcznzwx28G3ey97nXaWu0P1IlPCoLU4u4XFH8JDAI
      S1RrrLQd2YdVrkARW6Gq6TAHaqwolEqGBgMb7tN7liAl/UzNLTHn8ROMiexvaAJBxr7GQj64
      PMLx3UdIrbvxx2pQZJIIhiLOnNuDQSuHeABlaRMvWK2MebzUlZif6nU/MSQJUZLuaQikjaqS
      qTl65nWqxzsZz1Uy3tWBpfkE1TYD4cl2VHte5eslfq5OzHGwZuvpEJIoIknSxv+CACipqCqj
      vPYEqcm7zDiXWJlaYmRhDHmohC/taeDftb3InfffxZ+EzTi4dqwXyL26QmFxGXJBZGXVjVGh
      QG23owFIhfEklNgLNmYUds8MMTizSmH1XuqtKuQGHYm0RLHFRGjNjaBTkEgbKC5QMjUyROme
      w6gSa/T0DmOu3INdGWBoYglRVcDp5/cy0tNLDANHW49gVP/55hBtyQsUcfHL966QTOcorj+E
      yjvF3rNfYvL2RcLqcl46c5y57g/pmfIgCBpe+dY3WLzzHnNhDedffYki/dbHgGOdH9I96Uau
      VHPk6F7mXQKvnqjm+uWPyFobOXviAEoZhJxTJIsbkK2OcPnOCA2tL9LaWLapMnasAeT5bB7V
      DSrek0SWPEVJZNS7imgpzUsi/xT5KPDWeBxJZPFTlkTqbHaeriRSStN56X0mViM0HH4BW2QU
      RdNfUJKbpncuS2l2msujbozmEr76Rhtv/sMvUdhMNBw5hy0xiar2BeqLNdy99C72I+cYufAv
      eDMGVEX1fO1EBe9duE5WX8Qrr7xCsWl7JmjNSyK3Rl4S+ae8QIkVrg8G+MZ3/pLdpSbWl2cJ
      JCEdD+B0rbPuDdL2ytfZq12hZ85DTFHB97/9Ze5ev8S6a55AfGMYvjo/QzCZxhUW+c73f8D3
      v3KK+d6rCHWn+dorz6NT7iBXYZ4vHJ9uANpyzh228rN//mccK9E//D6XYLi3k5GlNKWFKoKu
      WW7cvoOh8I+nvaZ88/zsJz/mzUvd1La9hDjdzr+9fYV47skMQVKRdRyOUcYmZ0lmJTLxMPGM
      iNftIpbKQTqOP5Ik4lthdHQUpyeABITWlhgdHWViZoF0Ms7UxBiO8WniGRExm2Bm3MHs4irZ
      Bw2NyOrKCqnshsEvLy6SAzLJCJF4Cu/yHKOOMdaC8Qdrkd0vY3rBRU6CWDhMVkzjWlklI0qk
      IkGi6Ry+lTlGR8dwB6KAyNrS3L3frZKI+BlzjDIxu8zDVZiMruNZv3e/xAxLc1NMzC6xSa/g
      n0DCNTNKR2cvoXsrZIrZFNOjfXR2DRCMp0FMMznUS/fIzMYvxAxzkw4ij7F2UjrkZnze8+Bz
      NhlhqLeL+dUAUi7J+FAvHXf7iKQlYv4V7t7tZjUQ3/TxP90AkgmK95/mb797nrLj/jgAACAA
      SURBVCsXLqHTavD6fATWPCh0ehAUFNnLeOXb32dvsR61voDaxsN8/xt/XIygLtzF9/76B3zr
      5TaSaTlf/s6/p1HlpWfG80f3f1wiK25EkwmDMsbEjJuEb4G1aA7n2Aijc8tIMQ+Ty0GcrlUs
      FgtB5wjTrijry6uobTasBSZkcS++lJoCncTA0CTzo0Nk9AXIspEH8Q4x7mNyZBynf6PSZ0Zu
      MeEMEwsss+wJ415dx1RgZGZkgPXYxpOwuLyKzWZDDM7j9KXxLCyQyIQZGRjEuRYhvDLHaizL
      ksuDzWJiabwfVyiBe3Uds82GxaQn6nKTM5pQpV2MzvruXbWEe34Sx+QiGQmWpoZZTynQC+Lj
      r98V8TDjy1Bkho6uEWBjTtOsoMaqinKrb5qpvpssx5WYDRpAIrg8ztVLl1gKP2qhOe7c6KBn
      sPfB9U313SGEhuHu2/gDETIKA8WmJFevD9B5tw+L1cjQ3S4Sm+wJf7oByGCqq51fvtPFN7/7
      dfae+TqZsffpdsp4+dQ+Sur2cnBPI+V2KzLBQNvJVmp3VWPQKCguraDv8i/58O44NXsOUKhX
      U2c38Iuf/ZifvnuTXNzHu7/+JWuGRk42bc5dtXUyuBYWcK4EsRZ9HIbWF5ahTq4RuL+YrFxN
      SUkpe/YfJuyZJ5uO4ZyfZ3F54y1vKCikpMQOuTTmAj3OqWlSygKM9zIcfGsBavbXEVz2IEpg
      qWgmtjzxIHqpVOspKa/kYK2V1fV7c4qmY8zNzeGNybE8pN0rqanF75wjfe+VLlfrKS2voLmx
      lnXPGqlYkPn5eZbdPkRJjrW4GHuxmUxq41qkTBR/zkKlOUkomsEfy9HUsIvK2moeOxRpsHPq
      2H5SsSiVFeUb16Y1oiPC0LSbmko7K243Ue8Sq74ouWySwUkvx1rqHrlI71Qfmt0nsD4siUxq
      OXzkIHWVFuKiFkNunYGRJeqbqpFSYcbGp/G6ZvH8kU7LH+PTB8FqMy9/9duf2PTGd37w4O+i
      Q8cf+sbK+fPWB58aT3yJxhP3PzUDUPmt//CJY32v7tDmzvCRUdOw/wAFqTDL3jUKHjwBCmqr
      7UyNzSHZmh7sLYpJENQotQXsbWjEJMhQJT3MDN1i4GaC17/+VWw6JWdK4ixOjrBitFJhkeOc
      HcedMRCMJNi3vxZBpqSxWsfQ3DpFZR9HQNNpEYXm3nhHW8Ch+t343dMEAh8PQgWFgWpLkunl
      CMUPvRdy2RQyuRpdgZ2GxnrUMgWxxTE6r7xPNGXlW1/dDUDE72FmagytLEepphK1wMYC39uR
      kiFk6b12g+L9x6kq/FiUUlp3gFM6HSPOVdQaE4cPPE9g4CLvfehgfC6EMTGPOVnHnvN7t1hg
      jN++0462vIaZmU+RRMpk2He3oDdb6J9f5KUvfYt4Mk7ftRto1Z9dAuwwN+gnEFKMdnehFXMU
      725FECIIAggyAY2lEj19BJM5LDk/V69cISfJOHrqDP7h6zg6OjAZrBytL2T3oVPUGWIMT80S
      1cSZWfYjCUqO7pYhpfyIBU28fKgB38QAq9E0gkyGqaQOcWiYXHkjCZ+Ta5eXEdQWTp3YSOkS
      En46OzvJZrPsO9ZMRiYDBGSCQFF9E0M9vyR38AQp/xKXL3tAoefEyVbGbo7Q1bGGyVZJrU5P
      2/kvo/AsMDXnYl9DGUFfkOMvfYkyTYw+xxoV5RZutF9GqTDQemY/IXcGszpOTl+KVb+1W59e
      HuLK0Czly24q9x6nThdFNJvpvnSLhJSlqPE5msoruPTRe6TSSr7279/gy4LEXPcHZOqaH+EG
      6vi7/+F/RhRzfHh5QxLpmAxTVaHnrR/9E7rCWspKXbz9UQeZbJaipueZHrhF19gitro2ijfp
      WNxRgbC8ImxrPI4ksrN7kOPPHXuKksh+1jQN7Cnf2kLYn0XeAJ5h8pLIHdYFyq8SuTXyq0Tu
      MAPIrxK5NfKrRO7gmeHy5NkMO9b8A3Oj3JxYRC1X0tJ2irHOdva9+DpCcIF4CoIpDfsby/FO
      jZAubWLy+m9IK8yU1B2kVBFBU9FIgQp8znF6HQtIci0nTp8mMtFJvyuIWmngeEsDnV39IMio
      bD6KITrH+LIfra2GM62P4vn44iGmQ/zqZ7/m4MvfpEq5zrsf3SZrruHffamF2x9eJ26p5bXn
      929becvjXVzrHkPU2fn6X5yj/Rf/iB8D+557jYrsLB90jFPa2MbrLxzY1Nt9xxpAJiFw5Nx5
      KtRqcqk4GpOWmYlZaqwZUkIRueA88WwZi/4IB3bJ8FU1c+jgQQCcjgEUEkCGuaUAJ8+9jCI2
      T59jiUpBy8lXT5BZGmdt1UvJ7qO01G+Ifa5/1EXbyZfQyZ+VcYjE3Ogg8gIbYjrLoGOUU1/+
      NmVmNYKQY9/hNhzLrm0t0VrRxLcbjtDfcZVEzIOm9Dn+5tUjyHJpPrjYx/d+8H36L1/Glz6w
      KVfojjUAiNPZfgmjQs2h1pPoLGVoUn7cEQ0Gk4ICg4pgYIWc3IpSBssTfay6XJTUHeRj9WoC
      STChVcmRKe2QmCMrD9B57RqKjMihvXWM9HTinlZT2XyUtmNH6em8Qs5Uw4vH9uwkRfAfJRlc
      xRk3sL9WRg6IBd20/+5NkimBb/3tX1Ng1sHy9pap1Srp77yFrmwvhQYVEc8IP/qnbna3vopC
      q0erVGMxyYgmeNYNQMeJ8y8/aAE8gozq2iouXutk75EqKsstXLk1xq4TJwGoaDryUAtwPz/J
      gCyzijfcgOAaRFm8H0Uky+FDeymUK1Am1qjdf+JBC+BZXeXk2Ze4e6uTNLDJYOQXlnjAw9zE
      IH1rToy7khywV3Jqz2myQ+/ijEDBE5gQY3qoB2P9URpKjGSCqxx99Q3KNWF+0z6JTQiyGvQz
      vZLixROffSzYYXGAh4l5F7nTN4YoyGk58SKkwxTbrDgnHWhK67CblIyOjNOwZy8qOfTf+oi1
      GJTUHaRM4aN/cgVbZRMtdRa6u3oQLLWcOFBL2ONBWVKykVuTitB5t4tgPENl81EsmWVGZ73U
      HmilvszyZ98CbNfEWH7PEjmVjUJ9jssX3idVuJdXD1n49VvtpIHyPc/x8rHGxz9hcozeuUzP
      1Coozbz+lfMsdF1lwgdf+fpX0CZdvHfhFntPvUJzpXVT9b9jDSDPZ5OfGW6HdYHyUeCt8ciS
      yB3EjjKAvCRya+QlkflAWJ5nnB1rAOlolOSD1kAi5HMTim3IVHyueRwOBwsuH6KUZWFqDIdj
      jGVviGQ0zD3FH4nwOhPj46yuh8mPlD6bTDxAf08Xk04vkpRjeWaU7r4hIsnHF2R+GhHfEl13
      7+IJpYn7XXR39+IObock8gtOeHkZf/aeUiqXZnJigvmlFQDWVtzoLAV45qeJpKKsrkWxWArQ
      a1QEVxYIZQBSjI1MoTEYCAeDiHkD+Ez6O26B1sz07Rt4Yh7mPWm0YpTeR14l8jNI+7l0tRez
      xQrZJB13ezGatQx0dm+DJHIHkU5GUJvtSNEwaQnSiTDORSdpuQaNQk7E72Fx0Ykv9PBcngr0
      6izz88uYC4uQPRM19XjYCi04ZyaI6yxY9KU8f2wvoihSVvxkUq4TrlnCKJmZmUeUK5BSYaam
      5llfndm0JPIZuK0S/vlRxueWWZifxBVIozEWsnffPgpVEtFsFlvZLvbv30flJ6awltN4+Dna
      DjUyN+4g+4Rmr9hJ+PxRWo49T6kQwpPI0nfnJpa6FnZXPBkDkMnlFFbU81zbPm7fuMWLX/om
      Z06doMxamJdEIiTpuX4No6kEM1q+8vrzpNdXWPR6yAXd9HQFyKUESvfWsbYwQSDopqRuP6ZE
      kIHr7ZRVlCEL+fDHU8gMxTzLi8RvFq0iy/VLF0km5dT6+rl0d5oqp/sRV4n8bNTlTai73uHC
      dIri5ueYHrhN19gi1trWvCQyz2eTV4Q9E12gPHk+nR3VBcpLIrdGXhK5wwwgL4ncGnlJZL4L
      lOcZZ8ea/31JpEJScPjUixQqEnTc6WL/Cy9hzXi4cKMPAYmK5mMo/WMseOOotIUcOVxL183r
      iHI9Nftaaa7c+uJuzwrZZJgrF9/DFciw79Sr2KKT3Byaw1x1gL84UcXFdy/hjWU5/OLrHNq1
      HYtppOlt/5CRpXUC4RTf/Ovv4e67jGMpROu5N9CsD3FncBaNrZavfPkM2k283neUF+hh1hwO
      0vX1FGbcDE3BbnuM8aU4hWW72G2OMbCu52C1kbtd/ag1ao4cbgEg4fezGImwu8xEV+8yrSf2
      79i3xOOmQ0c981x3eDh7wMJ1RwZ5YIJjr76B4+K77Hr9VXQpAcJLDLpznDm6fRppKR3kys1R
      ju+38OFwlq+d248kScQjEbR6LT1XrtBw9nWKNjG82fFdoEwsQ1FpAY7eITzeFYYdk2TumbyY
      jlJQWA5RNxcvXuTK9R4SG1+wOLOIqaT4qc189kVEptViTHr47dVhrGYde/fU8P6v/o3bw5Mk
      s0oCvhUW1mK0HmjYxlJF5kbHKWtuRpmMs7Y0yk9/+ituD04hxkMsLs5hbW7Ftsmx/Y43AKO9
      nnJTEpl9H6+ce4nmYhHvRrIPCq2VPbsrEQBBEBDur5cqKLHYLCSC66Rz+bjCpyGIWZZXPaQj
      ATyhGJlkAlFMU7T/BCWBXn78bxcYGhmmf2Jl28pMB13MxjQ0ldlQV+6hWpuFXIxoPM3Fd3/N
      zdvdDPR2EUxs8hp2ahfo/mUJgvBH/77/eWNf8UG25/1tAjxY0EL4w4WEdwSPrQi7v3QqIBM2
      akwUQXYvbH4/KCkIsgfbHpeH7+XGZ/FBmdK9ZVyFe8v2bua27dTu7Sce2k/7++Ntf7yyduZj
      v40Iwr0H/8EGHvZEPwm39O/fP0GQPSjzUV5UO8oAMplMPhViC+RyOVKpx1475gvNjjKAXC6X
      N4AtIIoiudyTE6t8Edjxg+A8ef4UO6oFeJigc4LOSScKlBxsa2N+8A6RjIyC8gaqDBHmvTpa
      W2qZHBulrqqEu71DZGQaDrQcpcikZn1pgv5xJ5aKJg43VyETQBKzjPTcpKD2OaqKoPdGB8G0
      SEFZLVWmDCPDY/hzWnbvOcjBOjuuWQfji2sYbBU0FGsIq63U2IzMzs5SWajg8s0JVDoVjQdb
      ic/3shjKoDGWcKLeyJJUQV2hgmTSi8+nRpueo3PKh0ZnpO1AAxOOYcJJkd0Hj1FVqP9c6jib
      inH3+iXmPDGajp1lX2GGi5fvkDZW8e3ze/jw3Q8JZJW0nXmZ3aXmbSnTPTPAjZ4xJH0JXz57
      mI4rl/FEMhx+4TXk7gH6pj1UNLfywuGGTY3hdqwBZONw8PQZrGk3jkkX2qJdHNuz4Y9eXp4k
      F1hiPVZOJBIh6k4gL93H8doCpHtVkkik2Xv4KG6nC5GNpjKXiZCUTATWlqkqKkNlqeLc/l2M
      DvShLTrCudYMneEqDtabQEyx5ApwoO05jAqIuRdICCYAYrEYklVH/cFT7DKHGV5ao0Bt5dS5
      fSwNDxCOhIipNhYJE8UUyaQMrVxGy3PnKTdB3DVJUlfOC21V5MTPrxEXZEr2Hj/LUcnPzZEA
      w8vztL70BmVmFRnfCKK9jS/tyjLsWt02AzAUVvOVb+5juOsmoeVpktZDfPtFNe1d04jJBN/8
      9jfou3oFX7rhWQ+EpXD09tDbO4XZbsG3OEZ7ezu944uAjPqGKubnlhAlMFXvx5KY58atLsKp
      HCChVikY6OvDbi8kHEsBEpHleQpqm8nFQqQkCK8t0NXVTSijRqX8vaqUqdi7r57p/k76J5x/
      qCmWckyP9tI9OIHWaCQe9tDb1cVSMI1O9YfvpUwiQtetdtpvdpEzV1KpiXLj2k180ewTqr/P
      Rq5UIU8F6B5a5XBLPdGQh5sX3+Gn//ZbIoYKskudvHdtAGvR9mkO9AYt0/3daOy7sdfUIXP3
      86vfXsdeU8PeSjNvvfk2E4tLxDY528uObQFAxa6mJko0evRKiXh4DwcetADTKAx2zOsjTMfS
      JGIxKve0YvdNs7oWpMhoxOlO8tyheq51DXP2pReRJJiYWyTMOulYhAJ/HXpLCUZNkoSqCOXv
      +7nFHClJQ9vzJxnv7yOrKCLgC5G1yvCF0jRWaqmobaK+0oBOp2XGb6WpfjcmtRZ1aAYynzyc
      Umvk2KnnKTdBKhrGWtXM6TI3/fNrVNqqn1KdfpJszM/QjJe2546hUcqxFpVT13SKzNAFxkZG
      0DS/zDl7gOtTC+yv2h4jmB8bQFOxj4YyM+HpLuS1x/hOs57ffDjIV189yTcbGvnggx6KDZ99
      LAD5D3/4wx9uy5n9GZDNZh8ESiQJdAUFGNUqBMDrnGB4fBp/Sk5poRmNRoe9yEgkIaPUpmWo
      pxtfUsO+pl0oZAqUYpiRWR/NDeVIShMGjRzURg63tFBTVYqYyWIwGKncVYcsFSSn0KJRyJCU
      Bsy6jfdK0D1P39AEluomqivLEddnGZhYYf/hw+hVcpRaMxaTZsN/Lcgw22yo5TIEJEYHe1hY
      9GLfVY5apkZBgoGBAeZXvBQXWZh1DDDjTtNyqAmV/NEiFvF4HJ3u0VcQTiVDDPd0MTg8ijep
      ou1wM/3XP8JraOTs8cOsO67SNx/h5MnjGNTb8a7NsTIzQU9/PyPji1S3HCO30MvNgQVeePk8
      4fl+LndO0HrmLEWGzeVC7KhIcF4SuTXyksgd1gX6RD5Pnk3xrNfXjjIAtXqnz8i/vSiVSrRa
      7ed9Gp8rO9gLlCfPZ7OjWoCHSccCLCx7kGvM1FSVkAiFUBcUIM+kSOQgF13H5QujMlipKS/C
      45whlBQpKCqj2KjE6XSSzIhYS6rQZAOs+iLoraVUFG/4s0PeFVbXI2iMVipLi5DLJFwrbkrK
      SkFM414LU1paRCoWApWekNtJMJ7DXlmNWaskuLaMN5yhpKISk1b5OdfW9iBmUyzOLVFcV4tO
      JhDyrhCRDFTaCz77x49CLsXM5CShpEDj/n0oUwEmpuYxltSwq8y2qUDYjm0BggtOgoJAcn2a
      0TkfCyMOIkAm7GfBE2DVOUdWUOGfGmY5lmFuYRGVQmB6cIRQJMiSL4RKpUIuk7EwP48gV7A8
      0sXKvXlXV2fnyKhUrC5MsRZOIEZX6L/Ty1I0RyYVpufGVVaCKTwLE3jCcRbmVhBkOXru3CWW
      9NA3vIxMSuNdD32u9bSduGYcjN0dxJXJkMuuM9g7wejUE5oXFBATYdZjWeQ5N+03RpgZd5CW
      ZDg6buJLb+4YO9YAQEFZdQ3VVcWkYn+Y8ZjLJPF5vUQFLWaVjFQ8gndtHZnRhBqJeDiI1+sl
      lswgUxuo2VVLmUVF4l7F5rJJ1r1eMpISnVrJyoKXg2f2sTK9AoKMqro6lmZmHmgKtCYbtQ1N
      HK1SMR9UIaT9+KI5Su3Wp1clT5iKpsPsrytFEEChLOTk6Vb06if3iMkMRZToMswvrFNdV8Ge
      oyfZXW5GbytFv8m+zQ42gDidH/6Wt6462ddcgiCAJEIulyUniii0RnbV1VNdIOCLSRgsdurr
      6zBICWI5AWtpBfX19dhMGjIhF+/96scMxkvYdS+ir1Qb2VVfT5FBRSyVZGp2ksnRRaZnHQCo
      DIXY1VGW1j8pTUqnJVQaI6fPn6XaqmB4fO5pV8yOorCigUMHduNecuJfHGdgKcaJ54+i2+ST
      vaMCYQ8T8wYpaz1BrT7NSlCktCDHrVs9zK+ssauhicTqBBMLbtbWA5TV7mZ5tINVX4hgQqKq
      zIpjeAiv14dMXwSSyIkXziIE50kqCijQq3HNDDOx5MHvi1BiVxPKFtF2eC/GuIeY2U42nqG2
      xk5vdy/l9U24RruZXlhgJW3gSLWaq9fu4l4PoLeWUV60PXkyWyUajWI0GrfteLP913j/0g0m
      FhexFxdz6Z136BseIaezU1u2/bNrhFenef/DKyw4V1AWlDPZ9RHeYJS5RRdlNbvZzNBqRwXC
      Hubhy7ovk9sIkgn35HMioig9kOtJoogoSQgyGbJ7+0qShEwm/4Ra7L78TxRzn/z9ve2StFEG
      9/4V75W9cXyQyWUb2+8F7GQy2efmi9/uRfLEXI7cveuSy+WIudxGvcjkyOXb39mQJIncvTLk
      cjnSg3siIJcr8pLI3//7YYmeIMg/Mee/IJd/oj/4aXK++0eVyX7v9w+O+8kbfV8yuNnjf5GR
      yeXIHrou2RNeVEEQhE/ObCdXsNVq3VEGkJdEbo28JHKHGUBeErk18pLIHe0FypPns9lRXqCH
      06GjXicdXb3ML3kpKivFNTVA39AESZkeEj5ycj0rk/30D48TSCsw5Px0dPWx7AlgKy5mZXKA
      vmEH3qhESZGF7qvvMTG3RDCtpNAAfZ2dTMwuoTYXYtJ+nHo71HGZkcl5fOEsRUYZMysBCi1G
      VlcWkKsklpxRLBY9mZSHKxduMr+8jMxowzN2l77xadyBFKVFeoa7O3FMziFpC7AaN/J1vAuD
      jC5nKS82MT9yC1fCRKFJxfjEJJrUGh/dGWbV48VoLUKnUuCaHuTWrTuMzy8j6GzYTJpP1NeW
      0qGzUfo6OxheDFBffW/gLGZw3L3GpRudCOZKTDkv7713gUFniD2VBtrfv0BH3zBKSxlF5ieR
      c5Tj4i9+ROegg4zWTto9wsVLN5h1///tvVeQXOmZpvcckz6rsrw3KA9TMA0PNIAGGmg2yeVM
      k2yuSG6Qsbs3uyHtxoYuJN0pQpcrM6HQhVZSaKXRDDnkDLuHZLM9UGgABaCAQnnvM6sqs0x6
      b4/TRRbQ6JkhuwD2sDnVeO8yq875//Pn+c5/PvN+b5q2tmbkr7IT7Fv30nzgOM1lZgr5KMGM
      ncuvHkNTdQIbISRHFt92llMvX0IyVLxTQzQfOUNziYSSChHWS7h85RjuiVGC6Tz26n2c6T3A
      6OAY0Yocmq2RC6dbMITPLqHgrOXauV5WRh8RyrpIpot5gFw2jUO3k0oVmS46Gq37T9PTUyxH
      Xt4qf0KJjEd8BJQKrrzSg/q4M51RIBDRkIwgGbURRXISXp0j33iaRDIJTiuHz16l1vAxteyl
      4lgnDV3HMCkqsYYjdJX9njoAgkzrgeOkpseffJWN+VnL2Pn+D3+AgMDw7fucuPoGjWUWBD3P
      icvfRM5sMLEdgOZ/hISfHkGqOs6PXjuOaBjEoibe7D7O6O3bJFS+2pTIjoOHSaxN0T84RS6f
      wOasQhIlzObHwWEbhw81MTpwh7n1MO29R4gtjfJgZJZkuoCzrARZkqgssZEqqES33DwaGiEj
      2amsaKHamqD/7kPCfyfLnAlvMPToEZs5E67fFYc2NOZG79PXd4vVYIJMws/o0BCbSQ17+T4O
      1encuX2brWiR26ckY+St5VQ7JWKJDAgmejvKmXWHnjqpgL28HCmf4wt/s5esVFWUfqa+JpdL
      E3RP89c/+yl3RldIxv3c/egdfvJXvyYu2CHpZcwT56WDHV/0bIpQIb41zU//4s95tBikxGlj
      eugBpZ3Hdt0bdM/uAJmcwsETLxOZu09QqSQeWiTfUUYh95hrWECTK7l4uYmBByNkqrs4cuYC
      m/NDZDER2tgmV1fJWiBGS6OZRGU9DtFAq6xBU3JUtR6mtmKNpVCCxvJPuzJYS6sos4mEhBps
      ZjOFZJyckiMUiFHVXPPpBAWJA8dffrIDLPjKqXZYSBRsWLQclrpuXmlsYGTeR0e9i0hwndUF
      P0E5h61QTq0M9tou9If3yZofv14YhL3raA7nH6Spr93uoq6zl0tnOujrm6O6upHOHUrkst9P
      ejXDy+dPYHpOxtrnoZCFs9/8NjXmOO/cnsEaFqk9dIYGl23XXf32rA+gpEIMD4+SdrRwuL0O
      lynP0Mg0UkkV5U4rFpuD8Po84zPL7Dt4FJseY2hoDL2kme6OJkqlDCNj01S2HaKp0okoybR2
      dkMyREEyszI9ijcpcKinlenhIVw1DZglEUSJxn1dOPQ4abGcamuW4dFZajsPUVdmZ31ugrkV
      NyU1LXhnR1nyrCOWVFLusFHb0o6LLAlNZGNxkqX1KIeOHMZmFsnndPYfP8H+/Z3I+TyOUgdO
      Rwm1LpmEXkKNU2Z8bISMWMbRg+2fcpQNHdleik3UWfNuYDfDdjhDqdP2bD5Acou3fvUugWAI
      f0Zkc+oBJZ3HqdT83Oif5qULL3OwvZGR2x8TcHZzvh7uPxphZnqKlFhOS+0Xn+0WTRJzD28y
      MLXN1a9dIeCeYGRkgnnPBo2tXV+9TPCXQolU04SSApVl9l1lHv+Y8LyUSF1V2A5FqK+r/Sff
      P3XPvgL9wSA7qCr/sifxh4Uom2ioq/2yp/GF4IUBfIUhSdLv1RViL2DPRoFe4AV2gz3rBBuF
      FOMjI2xE8li0KCPjM6yvr5M2bJRbdabGxvCndarLSwl7FxidnCelmaguL0HQC7hXPFhLyjFJ
      ApnIJsOjEyR1CxUOE9OjD1h0r6OYSqkosWGoGaZGRwhmRarLnTvVnyprC1PMrwYoq6zCyIQZ
      GRnFF0hTU1eFaOh4F6eYXvbhcFVit8gEVpfJmBw4zDLehVmEsipkLUcomkYysuQ0iY3FCaYX
      ltmMZKivqSIZXCOUM+GQdaZGHrDkXmcjEMPlsJLVRawyrMyMsrgepqq2BvmpBl65XI7S0tJd
      rq5BMryNP6Hgcj6OOmn4lhdY8qyjSg5S/hWWPF62tkKU1tRiQsW36kZ2VGB+jrCUmo0zMzNH
      UjVRUVrcqfLpCPOzC6gmJ06LgXtxnjVfgNLKasySQDbuZyOqUFayu8Tbnt0BBm++hy+hEF2b
      J1SQSEYWGBrfQBJ17r33NsvhDCt3f8O95QgDAw+QZZHpW3/L9LZCxu/h7V//mkVvGCO3xU9/
      9h55RHxeH4VUitGZWUwmE9KO17s59pDRjTAfv/8+hZ0eiNsL/Xz0YIV0aIFffvCA7bk5VpJJ
      0puP+E3/Mhuj1/lwdA2UDJuhKGgp+t/9G64PezCAgRs/550b42TjG9weYZY/LwAAH7tJREFU
      mGTLM4p7M4coy0hKlDv3x1AN+KTvYz65fRcEkOQ8/R/fR5VlsmvzjPkieB5+yK05P1n/PL/4
      8OHzL2g+wtj0GqNjnybCKMR5ODqHLMuIooAoSsiyzPijQRQM4pvz/ObtX+CJPd+Qy7OTZFSD
      yU9uUcx2FBi5N0BCURh5cI9YNEYgkcPIb3CjfxZdzTHw0W+4OTK36zH2rAFUlJXgXpjH0nyQ
      nn37OHH8EPv3H6GnDjbVRt54/VW+86PXWBtZBHslZ8+e5VBzGYmMgte3yvkTJ1ha9RGem6Lp
      8p/S4tBIF4p9QxORAF6vl2iqmASramvCiCbZ19mJLAiAjntyi9f+xXe4+vq3Kc+uElUs9Bw7
      wdnTB8hGEwwuhPnhd65RSATREUlvrCAfew3r5gwZ1cDecpKSwDBbnyGUibT2HMQoGPwX338D
      qxAlIzZRko+Qka30Hj9FZ3sXJ146hM1c/GnH1+J8/42vc/n1b6FH155/QS2VXHrlLC7rpzuI
      ls0RT8UIRTPY7Vbq2/bT215K/YFzuMgzMuXj3Kn9zz1kz/ELHN5Xhb2unsedDnUlSzAYIRjc
      JqraaSwx8HpjtLTVEViZxNTyErW7pYOxhw2g++zX+fH3vklh8iNGgk/9QTIh6gVUA/R8Hkxm
      9OA8/8N/9+95x1vNyVaRwZu3eTg/y6NPbpExBLJZheqWbqKbbkCkvm0/p06dorW2+PqwMOeh
      qcaClo/w4f15AEwmKOQNMFRUXUISEvzyP/1H/uv/8SZfu3YYWVMpiGbam5vwrK8zM/GIsbv3
      uffwIZuxDCBw7fWz9F2//5nr8k0Pkq8+xL4qB6HRj7g3vcz8xD3uLST/wXWQAcUw4B8h2i06
      a3jjn32DtjqB2/0T6MD40DxHT/bgG/mQoZUAj4bGmZhZeK7zxzeXGVwMcvGVcxSrmMycufZN
      Th87TF2lA7MsU1HfxuHeTrZX5/jVO9fZdE8zMjaOP7677rh7Ngo0dfddPhldI58p8KYFeLwe
      UgU91Sn+1//lzyCv8if/5t/jHtzgv//Rf0X/xx8xOjyJ0X6Of/XqeUZuf0Syaj+pd37G/zNg
      I6Q6AY3lsQG2fdscvvQGl4+2kE/6GZmNoKfDHHztMCDSffoQ/9f/9h/5wCrQeuJblMkZvvtf
      /reU+OZ4ODTDhZcP8H/+T/8zNrNE85lX8EUs/PhffwdpfYBHc9vYAUfNARpyv2Ql38YpgKyf
      //z//hxrcxfLS9240mn+m//wQ6yZTW4OD8L+U39vHV4+0c5/+rM/wy7pdFx6k/j2Cn6lHCHu
      Rq7soHG3C5ra5u0PbjEzt4hiq+VQhYZRVsXIJ33EszlqDl2GzCZ+o4aXHDLa0df5t9153I8+
      QG9/vua9tz5+l5hcg9+3weXXLxENJHDkvNwZnUcs68Ka9/H+9YcoqkJJ6yl+9G/+Hbm4H3Fq
      k4qvem9QXdNQFAVBkjGZZNhRE5QkEcPQUQoKiBImWULX9SeUOk0HQRSQRBFd10AQQdcoKCqi
      JGOSJZRCHt0ASTZhkovHFRQVSZbBAFmWinQ9VUHTwWQ2IRgGhiAgAqqmIUkSqlJAM4od2jAM
      RElCMHSK9W9FOqahq+iISIKBgYCqKDvUzSLNUNphXRWvQUTT9CIrS9cxEBAFUJQCuiEU66AM
      HR0BdJ14IklT0y5NwNApKAqGUZRHvfdgmEtXLoGqohsgm2QEDHRDQHrK0S6uocTziESqSgFt
      h+IY8YyxZe7haIsTVdORZBOiYKAqKjrFNRR3VEB1w3iyLp+HPWsAL/D5iEajNDbueg/Yk/iM
      ARQKBcLh8Jc5n98LT4dBX+DzkclkniEMujfxYgf4CuNFe/Tf4QQX0jFWVr2oOpicldRYC2yE
      kkhmK23tnSjxLbz+GPWtHRRSEWpq68jFg2SlUrS4H7G0hgqrQTCpUFvuwLvqJqma6Ozch56K
      kBVLKHeaMbQCvjUPad1Ge1sTZkkgtLnKdjRHXVMLRjaGo7IBWUkQz0tUl+9S+uMFXmAX+K2Z
      YDWfZsszzM8/mGP/gTZmPvobAs4WSmQRu5Dkrb/9GLvLiWAu4/2//RnHTp5h6fbPGElVsvjO
      /829oIkjVXl+0b9EWWKW69NB5Ng8j9YESsOPGIlX09NQwvzAb7g1E0H1TzIdtlFTWOCvrs9T
      W24inNZJLN5lNllKbOYTAqYGWqt/eyOnz2SClTQjgwPMLa/jrKzDvzzOyMQskSzUVDl4dOsO
      clU9TovM1N13iZibCM4PMjG7yGY0i80oEFUNSm1WVj1uEoFVBgbuM7uyjWQ2MT8+yOKyh4Rm
      RY97ePhogtWNANUNTVgkgeDyGLeHZvBtBqgot/Lo7n2W3B4yggPFv8CD8Vk2tiJU1tWR2PCg
      2S2M3bnD/PIK0YIJSzJMrqwMi5IrUi+J0X9rEM/6Jo6aWhYH+5he8hDKiDTVlJONrzMwsk5z
      Sy3J0DZpVcBuMRPbWmbg0RjerQS1LXWfeeI9GyUyzejDB0ysxehsqQNAy6e4e+Nd7j2ahNI6
      9OA87398k/n1BB1ttbz/1/+ZoYllxPI6al3PXnO0uTjMex9+wvx6nK7u1icch82lB3xwf52e
      Zjsfvvsej4ZHEcr3QXCGX713k1DBSltj1e/XHNdSUslLRw9S19jOkZ4WMHSy6RTZnIJvfpzy
      3ku8cuEC+1sqUBLb9N++zei8FwBbeT3VBFjyFzvJDk15eP3rr/HaG99nbeTmU6MUmJn38spr
      3+Abb3yNtdER+q8/5OKbb2ATCtgdDo6cv4z37tuMR52c6Krb/eKtLFHeeZwrl85hN6KEcg4u
      v3qZUiNCIJbFZtLxbkYxlAjJeJ5ETkW1VHD12lWa7Fk2A3EyhSJ5Jp1K0dD1EmcPNNJ96lW6
      aksoqe/m2rVrHOtqIIeZcy9f5nynjaXN4jUbusTxS1c53FKJPxSgrLmXa9eu0dtWS65g4uWr
      V+ndZ2VjM0k+k0LRNexVHVy9egUjuUUmnqIAGIZGIpVGAQ4eO8+1a5eodVqxuBq4cvUqpsQ2
      WQyC3iAOW4FQWqOQz5FXipyw1VUf3cfOcOZY1+8X8xYkmntewqYnnnyVi4fIOFr47tdPsOn1
      s7zi5fK3vkedEiGipSlpOsGPf/yD59YHs1e28uYPfkgjCR5nOdRMmHlvEFnVMcwlXPnmt/nW
      lV7WlleZWAzw3e9/D2vITVj5nad+gl0nwgTJRH3LPpob67CYRFTlU3VCyeKkdd8+6qt2HCpB
      5uixg0yNTaIDssBOiYCKID4dny2G6TRNA01FkE2YTAaFApSVmbh18yEWVyO9TaU0HTqKfTcs
      5x1EchoNLjuiZELU09hLapAlmdIyJ4VsDtnVgJzx4/d4qe7YB0Ah4Wd4eJj1sEqJ7XffLtsr
      k/T19TG+tAn5JJPjo4wsRqitLIp0aIU0M2PDzK5t4bQ78C2M0tfXx7THj6EkGR8eZt4doazi
      0ydjbMvD8PAwacOGJGZ42NfHzVt3CCYVULKMDd6lr68ffypHMuhlZHiYOBbMagF/XqKjqYLw
      dvAz89zfe5jNuSEGxpf+vlLls0CyUl35WUqktaQcKbrC2+8NUF5dTktzNTff+RtWClZKBQX/
      4iQ/+cnPmFwN/dbT/i6UlZcyN3gH+/4TFBnFGitz8+zrPYbDJIBswTd5h/f752hvb0Cyl+Cw
      2KgsE0llP+fkO9j1Q0FXc8yODZOscHH+5Flyv3yLn25P0nPqKuKOAeQWXU8stay5B1fmLZZp
      4TsvH+PnP/sJLinN4Ve/A5n7DN/5AEvmJMdOHuKdt/6CflL0Xvge56r387//5P+gucGJuaQN
      BBFnqYuc5dl66DeUmJjfCHOkuRSFUmJBD/k2J/6tMHX7m0iHY5TbJKaDaS7usxEpgGwvY197
      O2abAy3sZS6SQHGJhJPa3yO71HUc4UhPMcHjXo7QXCuz4jdT5Shu1KJspaWjjQanBYeUItRz
      nCM9xW4KK4kNmipLWF83Ue408fiWdVTU0tHVhM3hJDY/y9lrZ6gupBme8YDJxktnLtLYWHzI
      bLuqMZvAUlGHkt5mbXmFWNBCwdpAZdenBPSsYvDSuUusDg0QKkDDFyiiE49uIJQf4PtXXLx/
      20NM2Ob17/4Qz/W3WY/C+e/8gNKMh4E1H0f2PfsuMP1okIoDp2mu2PH7lBxr62tsz86wPB+l
      /mArLQcv8M8PxvjVjVEq5SzBZJw1v8LZ07sb43dHgQyNvKJjNsuo+Ry5googithsdgw1T66g
      YrHa0TUFs9mMrhbQBBlBU5HMFnQlh2JI2MwSuWwW1RCw220YaoFMroAom7FbTeSzWTREbDYr
      ogCFXJa8qmO22LCYJDSlgCHKyJ/TX/LpKJCha6zMjLAeUTl++gxaxM3kgo/G7sN0NZYR2I5S
      6RJY3FbYXwUbajlyPk59fe3O8SqemTE8oRy9J05RU2olF1ojaWulxpJjbHiQcEqhqvUgzRUy
      TmcFkpZgPaLT3lRFKriFXlZPqQlQUww9HCaeU6nrOEy9Vaekrg49FSGQApdUwFRRQTyYpr6+
      ePMmt7ehthaHVsDnj1Dp1BkanEUVLRw+exqSUarr6oj4VskLIpbyZqrs4Pf5kG0S0xOzGI4a
      DjTYmV1ax9XYxbGels8kpJ4pCpTc4q33b5HOFajvPo495qH7ldfZHL3D/FaWs5evUqH56bvz
      CEdTL9dOt3O/7zp+xcGr116lyvHsIiAjn/yK2Y0UkqmU8xd6WPSofO1iL5BhYTZAS4uT/puf
      EM7KXHz9m1To23zU94ju05fpbavZlQ/wIgz6FcbvQ4ncCoZpqK/7g1Eik34fWkUjZaYvdsQ9
      ZQD5fP4r3+rvWfAiD7DHiuFeqEQ+G0wm0wtK5Jc9gRd4gS8Te9gADGIBHyuedXKqTi4Zwb3i
      JpLMATqBjTWWlpcJJ3MYapZ0ViMdC7C0tIR7zUs+n8e76mbZvUamoGEYKhurbla9WyhP4okG
      4WDgSczdv7WFZhhoSoZUpkAssMHy8gqheOaJVlguEWZ5aYmV1U00IJeIEEnlwNBIxBPoBuSS
      CXLaH6cvs7GySPpxBNzQCfrcTM4skMqr6EqGhekpNkJJDEMn6F1mdnEV5Qu+lHw6ypovgA74
      lqcZGxtjI5RCzSWYnZoiEM/s+lx71gDS2yuMLG6hFdLEY3GGhkbJFXJMjQwRy+VwL62i6QpD
      j0ZQU16WN7P4l5ZIQFEGJh1kcTOGlosyPDZHYGEcT6JAOh4glireAXo+ytjgMO5AUelx+sGH
      zKwnyMXWWFiPsLbkJq8VmBkbIrBD0Nh0L5N60u9TZWVqjPHFVQxgy7PAViTK9OwCf4z3fyYw
      z9t/+XOWUzufI5vcHZokG/Fwe3CBmcFbrIcT3PjgY9IpH333pthcGmN0cfOLm4ShMDH4Ee9+
      NIJKigcDRSKOYWgM37nJVizKrRv95Hbp2e5ZA/BsRjh58hjdPQcokaM4aw9x8MBBOlvLiIaT
      2F3VdHZ2YTfpn5ZP6CrJeJxEKo1uQEVtM52dnYhqFovDQTywjWivprK0GNKLBSM0HWgnsRVE
      M6ByXy8JzxTKzuKb7C46eg5wsruejdCOHKqhkUzESeQKkM+QtldRq8WJqyKd+zuZuX+XstZu
      7KY/sp/GyPNgeJVXzvU++Uo2W7BIOtF4jvKKUmI5iXPnznOu3op7fZmGU9/gwrkzJCP+L2wa
      Ee8ieVcbrZV2KISJJFRiiRylDgsx0cWrFy9ysErDn97d+faUE/w0ZAHUnaeosEMsgSJRRhBF
      gmuzfOz30tJ9FEkspvdFyUpjSwvlkgmTlGZl4i4Td3Nc/taf4qp0cNlVh9czy8qGi65GOz73
      HOu5EpKxKAd6O0EwcbjLzuRyCHvFp92yVE1HetwfU7TQ2NxIqdVOMuRhZcmLU85AbQ+drhwm
      q4nUPyDr+mVjY6yP0dUw5ckVZOsBjl4+SCGfxuyopb3RxMJmBLuhYxhQUMFkktAUFV3XEZ6H
      DfMPQUlx/YMbqFVVeKaCHLx4lG9/9xrphJ/rnzzAJhc525om7FoqaU+1RXkaLodI/+17rPt8
      2Cs7iK4OM7vkIZiSOHCghXzexLmL56gvd2IUwgQyJchJN/MbAZKJDNXlToyyNi70NuDxBpCy
      AUZmloglctS2tuOSMyxv5jl+4jCVQo6EuRw1GaGl8yDusTvIVZ1ogQXm3KushfMcPtCF1SQR
      DQapaG2jwm7BPbdEx4kzdNS58AUjxEMRDpw8S3R5EktNIzb5H3cXeBaVSFt5E4e627BlI7h6
      zyL5F8nKNuZGBvFtBZHKGumqyPPBjX48eTtXz53g4bs/Z3xxjZ5j56hxWT9/kM+DKNPavZ/2
      1iriEYND7aXc6b+PZ3WdirZjtIibvHPzATG5lrOH9u2Khban8gCfhYGmqmi6gWwyga6jahqi
      JCNLQlFNUCwqNhqGjmEIYGgoqoYgiMiyRFFREjRNRxAEVFUBQcIky8Cn1Dtjh34IBoIooGtF
      GiC6iqoZSLKM9JQ6pCAICICm6zs0SOOJumKRBqnBjlrlPyaeRyVS11R0XaW//yEXX30FQSkU
      S+bNZkTBoJAvZvhlSUBTFVQdLGbzF9w31UBVixRQdWd8i8WMYOjkCwqyyfy5VQOPsYcN4AU+
      D1+0TOo/RewpH0BRlBeUyGeApmkUCoUvexpfKvaUAbxQiXw26LqOqqqf/497GH9ksbYXeIE/
      LPZUFOhpSqReSDH0YID5JTc4KrEYQW5fv49nO0iFQ+Leg4e43R4s5U2EttYoc5XinhlhbGoB
      1eIitPiIkdlltiNZ6mtrEIUsN9+/RW1nB7KS5n7/HcwVLdiJ0/9wipraOkyygHtqiJHpBVSz
      k0wohK28jFxoi82USjoWwGJxMvvwJvnSZqxagtXNGJnNOe6PzeHzx6gpszMxPMjcsgeLq47S
      3cicPCc+jxIZXpvlg49vMLnip7Wtkb63/pzBiTk0Rz31FQ7QM9z45dsMjIyTM1fTVF2Cf2GI
      Xz9c4VBrKZ988AEDw1OYKhqpLn12lcitqfv84vptFlcjdO1vQwa2l0d578ObLPvTtDaWMzP8
      kDFPhM6WWtamB3j/Rj8bUY3W1np2o8y0p16BnsbG8iKVPcc56ZIYGJ6loreWrsNn2bevHOI+
      ajpPcGRfsfZ+0ptCyfgJF8q5fOU4qmrgDZdz8doRHt8ehqHhNBfw+JK02iPksnmyik4kFsJp
      0tlOZmlTo2wWqnn1ykkUNc/qfAAD0HIZUrqIJZ9G1w0Mu5P12WmqehtJpjNYJSunXzlNpQXS
      G3Nknc28cqoBRf9DKH39dlhKa/jGt/85C0N3SaS3MFWd5EevvfSkBNrIpTFqevjxxePFz/ko
      Y54MFjWGIJg4evHrnMpuMr7l50DTs6uI+IJZvvP9f0GF+fFtqrG+ssG5b73JxvhdkmmNhs6j
      xGcnwNCYd4f4k++9yeSOSmTVLp4de/YVKFowaCy1I5psOCUDRSswOXSPT+4NkshpuKcG6eu7
      TSC9I1uajmGtrEMSJSxmmWTEy+2+Pu4Nz7BT6oO1ah+FyBrRQITqhlrAIBxP0N69j5DXTz4a
      xFnfjCiKWMwm0hEft/r66B8cJ/fUq7YgO+isBnegWLOST4W4f6uPWwOjCBX7qJci3L5zn1ju
      y/VnHK5SvDMj6BVt1NqshH2T/OQv/4LRlSLFUUcisznFX/7FT3g4v8HcxCT7T57EKomIJgdS
      epMxT4xjB9ufa3ybVeH9v/45f/3rT3Y6W4rUN1XS/87brMUF7E4nNVWuokEKEvsaSnjnb35B
      wCjFuctnx57dAersIvNbUXprJKKKQJtk5sipC092gPbDZ57sANuAVFpDYnkZpfEg+bxOSUUz
      PUee3gGKNEdbPsAaZXTYDXL5GCtuH2v+KLEsHOk+QnR0BrX2ELlcFkdFE1eOHCLvW2Fdh6e1
      S6v39TB/qx9nYzcWZxUvHz5CpQXy6QS17YdpadpkbM1PQ1nLH3rpnsC7OIFW3sHxfVWoiRAX
      //RNKoUQHzyc53jHBVQkTr/yJ5Sbw3z0cIloykdwYZ2F+Xk6Dx8l4E1y/twJzM+Z0HM1HuAH
      p5u4/6u3CBWgyVxg2R3mtTe/j/vBxwRjGZy1O4k8TWHJl+C7P/wBYzfewZ+C1l30/NqzPoC9
      vJrE2gzT7gBHTpzAbhIQRSs2mwnQ0UULJTvv17quU1pWg50Ew2NzWMqqEbPbjE/Os/XEBzAw
      DImaKjtYKyl3mAEzde0dHOs9SJ3TjFBaQ5WcYHB0FktZDaV2M44SJ4JhIFqs2M0m7HYHggCl
      peWUmHRUWwUOUoyNT7Huj1Fb5WJhcpgVv8Kxo/uxPEMjgGfF5/kA2yszPBqdYHpqhZrudlaH
      bjE4H+DKtYuM3fwAe3M3vsm7DMwEOHfpAidOnuTo0aPU19fTWW5wd3CU2ZnnV4lUol7e//gT
      SnvO0GIOcnc0yIneOu5cv4lQ2cmRBjO//s27bPuDbOUsnO4q5/r1OzjajtPbWvnVywS/oEQ+
      G34/SmSIhvr6PxwlcnuHEml+QYn8rXhBiXw2vKBE7jEf4AUl8tnwghK5h6NAL/ACu8GecoKf
      Rmhzja1AmGg0hmSxEtxYJxSJYZisCGoB0WxGBIIbq2wHw2RVEZuQY3V9g1RWweG0k81kMZlN
      qJkkBcGEpOXwer1kVBGn3UoiEkQXLZgEhURGRVBSrHo3iMUTWJylpCJbbAejmG2OJ5GQTCJE
      RjVhNYskoyEKggWLoJLIFDAKKbzeTTKqgNNuRRAEMAzS8RAbWyFkmwNJz7Ph9ZHVRBw2C4nw
      NorowCILZGIhEgUBsjFSqozNLFNIxwilFJy2v787Pks59GNsepYQSyoxizyZmz+Wx+W0kY75
      WVxyk9ZkypxWAt4VVjdDOFxlmHdZnfmZ+YW3WFj2kMeCy1kspza0Al7PEtvxHGWuUkShOCeh
      pAJycRYXlsgaZkqdtt+vN+g/dei6xsL4OElVpZCL4/ZsoqoahmGwtrjIY8rJ4sI8iqqi6TrZ
      7UXWoir+1QWWNrZwL66iAVH3LGsJhamhAUKpHKtzo6wF0nhGBxhaXEfPB5mY3ySyvERAUdA0
      jWwywNSsh1w6wnY49WRei/NjTEwvAwbuqTGGZhYxslEmFtfZ2lolFsuwtTTGzFoMAyhkwgyN
      zJLLZUikUswMDxFMZlgZf4Q3kWd+dojZ+XXQFSYG7jPp8eJ3jzIwvopuwOLsEIOj81/ImmaD
      C7z153/1hBKp5VJMzgwzOFzUAAttb5DK5hn44CNC6U3G53zENtw8nFx+rvH8W16y+Tz3PvyY
      HT4da9P3GZnfIpNOo+mQDS3xt3/+U5YSOovTE0RTGUb7bxPeZY3fnjWAmqZ2Gmprae/qotQm
      UshlSadT5P8OQ1tT8qTTabJ5BUEy0dzWTXtTHYVCnkTIx9joKDPLXgyjQMpwcbz3IEcPHSAc
      3MRe2Yg1HyCcerzaOpl0ilQqDYIJPZ8koztoqN4JSCsRcmIzFi2KClicVVRKCTZjO8fLVto6
      ujh57gLxjUUwIBNYpfrAWQ4cOECjQyVtrefY4UOcPdmGbz2K2dGAkAuQyyZQrGWUyCA7qnEK
      CVK5FCnVSunziPT+XRgFHgy5uXT+8JOvJFsJ514+R6WjuLu0traRT0aRq2pxORp57dp5ylwl
      1FQ8ewgUoKO9nWQ0hKW6bicfo7K2tInFLqAJJiSxwODwChfOHQZB5NCpS/S211JaVcfntHZ9
      gj1rAJ+FQGllNY2NDbjsnxVPszrLaGhspLrMiVbIMnj7Iya8cdoaa7E4XDQ0NlJbVYYgiDzO
      ZBmGtvNZorOzEfeyl6JZydQ2NNLQUE9JSQXnL16g2pxmerlICg97Fljb2iCwusRypKg/1trR
      jndlmc+apYKxE58QZRn9ccWmKCJoOgZgqBqCJIEo0uISmVv1UVbT/OR668qcrC/OY29q31VN
      zOdhc6yPsbUwo5PTTEz8Fh1ek432zk7KSRPNq4zdv4O5fj+H2nbf1fuz53PQ0dWFU02S2On2
      LJotNDTvI74yyf2b7zDiDjA+PcPY2AxR7wKjnhhnzp/Cscs7e09FgX4rDJ2A100mk6D1wFFS
      YS93b8Vo7ThCMrzFXEHHVd9Bt83Gmcvn6aoEyGGxlVBbW4spuEoEmRprjg9v9IGm89K5yyTc
      M1hcjTiNEfyZOnAVWJmbJSRb6DmosTgyjSKoVLQV+42uRxQunnkJm9DG1NIyNWYwO6uotmcZ
      ieZpsWcZvN+PISh0n7wCAthr2gnfusXNZQct+49QIQa5ccOHltM4fbUd38IGFS1N3H9/hCuv
      nsTtL74sVDTW0t83wLV/1snkKqjJANsFJ/ZCELmildJnDJhVHbzEv2zOsnr/Q/IdzWwuzyBV
      NDJx79c8mgyhmU2UFNy4/VkS4Sw9/lE+HFiiaytC5PDLnD3Y9Mw/24NP3mMtqpFKahzNx1lY
      S9DR3cTNh/dRdJnXzl7j0DGd9YGPSLU30vfx/0fB2UA0GODKta9RtgsW5p7KA/xdaJqKKEpA
      kapnAJLJjKCrT5QG0YtKjqIkY5IEjCeKhsYTxUVDK1IUBcOgUCg8UZ40tOJT2NBUNENAEgwK
      O23jTWYzmqKgU1RnFAUBTdMQd9QLNV1HhOLxuoqmf3r8YzXKx06wpqkoqo7JbELEoKAoCKL8
      ROFSFEVUTUOWRHQdBMFAEEQ0VUOSJTRNRxJBMwQEdARRRhSekxKpKui6xp3+B1y88gpaPotu
      gCibMIkGhYKKaDJjkQQyuaKnJZstWEzP/qxVC/mi+qbJQtwzjNfUw/E2F/lcDkQTFrMJQSjO
      yZBktHwORdMRRBGr1barTPD/DyyCV+DemQoCAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
      AISR9h/E/VYvcVV2jwAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
